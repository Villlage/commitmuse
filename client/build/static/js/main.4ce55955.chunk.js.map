{"version":3,"sources":["app/pages/public/404/index.tsx","constants/system.ts","helpers/base.tsx","app/components/Icon.tsx","app/components/Button/index.tsx","app/modules/common/PageHeader/index.tsx","app/pages/public/MyISA/index.tsx","app/pages/public/OnBoarding/index.tsx","Routes.tsx","redux/reducers/auth.ts","redux/store.ts","config/environment.ts","services/logging.service.ts","services/user.service.ts","services/base.service.ts","app/components/Loader.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NotFound","props","className","onClick","history","goBack","SYSTEM_COLORS","MainPrimary","MainSecondary","MainSuccess","MainError","MainWarning","MainInfo","MainLight","MainWhite","BodyLight","BodyDarker","Title","Border","BorderDark","Background","ActivePrimary","ActiveSecondary","ActiveSuccess","ActiveError","ActiveWarning","ActiveInfo","ActiveLight","ActiveBorder","HoverPrimary","HoverSecondary","HoverError","HoverSuccess","HoverInfo","HoverWarning","HoverLight","HoverBorder","HoverWhite","objectToUrlParams","obj","Object","keys","forEach","key","undefined","length","_","map","join","generateIconLink","test","navigator","platform","window","innerWidth","icon","icons","GeneralLabor","Carpentry","Concrete","Demo","Drywall","Electrical","Flooring","Glass","HVAC","Ironwork","Landscaping","Masonry","Painting","Plumbing","Roofing","Welding","active_star","arrow_right","save_profile","select_down","select_up","save_pdf","share","close","star","usa","pdf","gigs_handshake","briefcase","refer","certificate","round_down","checkmark","logo","calendar","person","share_gray","plus","star_outline","emptyProjects","send","sendWhite","arrow_up","tooltip_arrow","delete","edit","account","company","Icon","replace","src","alt","style","Btn","styled","button","background","color","Button","disabled","loading","includes","marginRight","children","Loader","PageHeader","useHistory","user","first_name","last_name","push","MyIsa","OnBoarding","Routes","currentUser","fetchUser","path","render","to","exact","initialState","email","phone_number","password","company_name","company_type","title","address","company_website","building_types","project_types","number_of_hourly_employees_range","rootReducer","combineReducers","auth","state","action","type","val","store","middlewares","reduxThunk","createStore","applyMiddleware","ENV","dev","MAIN_API","staging","production","currentEnv","log","message","optionalParams","console","baseService","handleError","res","error","values","err","i","Array","isArray","handleResponseType","a","contentType","headers","get","indexOf","json","text","getJSON","url","params","fetch","method","credentials","response","postJSON","data","saveCookie","body","JSON","stringify","patchJSON","deleteJSON","postFormData","UserService","details","Wrapper","div","id","width","height","viewBox","fill","stroke","strokeWidth","points","configStore","userService","App","useState","setUser","checkAuth","getCurrentUser","useLayoutEffect","Boolean","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ce55955.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.scss'\r\n\r\nexport default function NotFound(props: any) {\r\n  return (\r\n    <section className=\"NotFound-page\">\r\n      <h1>This page doesn't exist</h1>\r\n      <h2>Check your link please</h2>\r\n      <button onClick={() => props.history.goBack()}>Go back</button>\r\n    </section>\r\n  )\r\n}\r\n","export const COLORS = {\r\n  body_darker: '#5E6672',\r\n  title: '#354151',\r\n  border: '#E1E8EE',\r\n  body_light: '#8795A9',\r\n  main: {\r\n    primary: '#253784',\r\n    secondary: '#3C3D4D',\r\n    light: '#F2F5F9',\r\n    white: '#FFFFFF',\r\n  },\r\n}\r\n\r\nexport const SYSTEM_COLORS = {\r\n  MainPrimary: '#253784',\r\n  MainSecondary: '#3c3d4d',\r\n  MainSuccess: '#21b881',\r\n  MainError: '#dc3545',\r\n  MainWarning: '#ffc107',\r\n  MainInfo: '#17a2b8',\r\n  MainLight: '#f2f5f9',\r\n  MainWhite: '#ffffff',\r\n  BodyLight: '#8795a9',\r\n  BodyDarker: '#5e6672',\r\n  Title: '#354151',\r\n  Border: '#e1e8ee',\r\n  BorderDark: '#c6ccd1',\r\n  Background: '#f2f3f4',\r\n  ActivePrimary: '#4152ab',\r\n  ActiveSecondary: '#282833',\r\n  ActiveSuccess: '#18aa75',\r\n  ActiveError: '#bd2130',\r\n  ActiveWarning: '#d39e00',\r\n  ActiveInfo: '#117a8b',\r\n  ActiveLight: '#e4e7eb',\r\n  ActiveBorder: '#c8ced4',\r\n  HoverPrimary: '#4558b8',\r\n  HoverSecondary: '#323340',\r\n  HoverError: '#c82333',\r\n  HoverSuccess: '#218838',\r\n  HoverInfo: '#138496',\r\n  HoverWarning: '#e0a800',\r\n  HoverLight: '#ebeef2',\r\n  HoverBorder: '#d4dbe0',\r\n  HoverWhite: '#f9f9f9',\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport * as _ from 'lodash'\r\nimport React from 'react'\r\n\r\n//eslint-disable-next-line\r\nconst emailREGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\nexport const validateEmail = (email: string) => emailREGEX.test(String(email).toLowerCase())\r\nexport const validatePhoneNumber = (phoneNumber: string) =>\r\n  phoneNumber && isNumber(phoneNumber) && phoneNumber.length > 8\r\n\r\nexport const notEmptyArray = (arr: any[] | null | undefined) => Array.isArray(arr) && arr.length > 0\r\n\r\nexport const fixClass = (className: string | undefined | boolean) => (className ? ' ' + className : '')\r\n\r\nexport const noScroll = <style>{`html { overflow: hidden; }`}</style>\r\n\r\n// helper to count array of objects by object's specific property\r\nexport const countArrayByProp = (arr: any[], prop: string, val: any) =>\r\n  notEmptyArray(arr) ? arr.reduce((acc, cur) => (cur[prop] === val ? ++acc : acc), 0) : 0\r\n\r\n// helper to count array of objects by object's specific property\r\nexport const countArrayByPropLength = (arr: any[], prop: string, val: number) =>\r\n  notEmptyArray(arr) ? arr.reduce((acc, cur) => (cur[prop].length === val ? ++acc : acc), 0) : 0\r\n\r\n// helper to count array of objects by object's specific property\r\nexport const countArrayByExistProp = (arr: any[], prop: string) =>\r\n  notEmptyArray(arr) ? arr.reduce((acc, cur) => (!!cur[prop] ? ++acc : acc), 0) : 0\r\n\r\n// helper to turn object to url query string params. ex: {a: 1, b:2} to ?a=1&b=2\r\nexport const objectToUrlParams = (obj: any) => {\r\n  if (!obj) return ''\r\n  Object.keys(obj).forEach(key => {\r\n    if (obj[key] === null || obj[key] === undefined || obj[key] === '' || obj[key].length === 0) {\r\n      delete obj[key]\r\n    }\r\n  })\r\n  if (_.isEmpty(obj)) return ''\r\n  return (\r\n    '?' +\r\n    Object.keys(obj)\r\n      .map(key => key + '=' + obj[key])\r\n      .join('&')\r\n  )\r\n}\r\n\r\n// helper to capitalize string\r\nexport const capitalize = (str: string) =>\r\n  str\r\n    ? str\r\n        .split(' ')\r\n        .map(i => i.replace(/^\\w/, c => c.toUpperCase()))\r\n        .join(' ')\r\n    : ''\r\n\r\n// helper to check if MacOs is used by current user\r\nexport const isMac: boolean = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)\r\n\r\n// helper to use debounce from lodash\r\nexport const withDebounce = (func: any, delay: number) => _.debounce(func, delay)\r\n\r\n// helper to check if value is number\r\nexport const isNumber = (value: number | string) => Number.isInteger(Number(value))\r\n\r\n// helper to check if current device is mobile phone\r\nexport const is_mobile = window.innerWidth < 600\r\n\r\n// helper to get query params from url\r\nexport const useQuery = (location: Location) => new URLSearchParams(location.search)\r\n\r\n// recursive function to return as a string last property of the object\r\nexport const lastProperty = (obj: any): any => {\r\n  if (typeof obj !== 'object') {\r\n    return obj\r\n  }\r\n  for (const prop in obj) {\r\n    if (Array.isArray(obj[prop])) {\r\n      return `${prop}: ${obj[prop][0]}`\r\n    }\r\n    return lastProperty(obj[prop])\r\n  }\r\n}\r\n\r\nexport const hidePhoneNumber = (num: string) => {\r\n  if (!num) return ''\r\n  const area_code_and_country_code = num.substr(0, Math.min(4, num.length))\r\n  return area_code_and_country_code + ' XXX-XXXX'\r\n}\r\n\r\nexport const hideEmail = (email: string) =>\r\n  email\r\n    ? email\r\n        .split('@')[0]\r\n        .split('')\r\n        .map(() => 'x')\r\n        .join('') +\r\n      '@' +\r\n      email.split('@')[1]\r\n    : ''\r\n\r\n// helper to get 1 lvl object difference\r\nexport const objDiff = (a: any, b: any) =>\r\n  _.reduce(a, (result, value, key: any) => (_.isEqual(value, b[key]) ? result : result.concat(key)), [])\r\n","import * as React from 'react'\r\nimport { CSSProperties } from 'react'\r\n\r\nconst iconsFolder = 'web/assets/icons/'\r\n\r\nconst generateIconLink = (icon: SystemIcons | string) => iconsFolder + icon + '.svg'\r\n\r\nexport const icons: any = {\r\n  GeneralLabor: generateIconLink('GeneralLabor'),\r\n  Carpentry: generateIconLink('Carpentry'),\r\n  Concrete: generateIconLink('Concrete'),\r\n  Demo: generateIconLink('Mallet'),\r\n  Drywall: generateIconLink('Drywall'),\r\n  Electrical: generateIconLink('Electrical'),\r\n  Flooring: generateIconLink('Flooring'),\r\n  Glass: generateIconLink('Glass'),\r\n  HVAC: generateIconLink('HVAC'),\r\n  Ironwork: generateIconLink('Ironwork'),\r\n  Landscaping: generateIconLink('Landscaping'),\r\n  Masonry: generateIconLink('Masonry'),\r\n  Painting: generateIconLink('Painting'),\r\n  Plumbing: generateIconLink('Plumbing'),\r\n  Roofing: generateIconLink('Roofing'),\r\n  'Tile&Stone': generateIconLink('Tile&Stone'),\r\n  Welding: generateIconLink('Welding'),\r\n  active_star: generateIconLink('active_star'),\r\n  arrow_right: generateIconLink('arrow_right'),\r\n  save_profile: generateIconLink('save_profile'),\r\n  select_down: generateIconLink('select_down'),\r\n  select_up: generateIconLink('select_up'),\r\n  save_pdf: generateIconLink('save_pdf'),\r\n  share: generateIconLink('share'),\r\n  close: generateIconLink('close'),\r\n  star: generateIconLink('star'),\r\n  usa: generateIconLink('usa'),\r\n  pdf: generateIconLink('pdf'),\r\n  gigs_handshake: generateIconLink('gigs_handshake'),\r\n  briefcase: generateIconLink('briefcase'),\r\n  refer: generateIconLink('refer'),\r\n  certificate: generateIconLink('certificate'),\r\n  round_down: generateIconLink('round_down'),\r\n  checkmark: generateIconLink('checkmark'),\r\n  logo: generateIconLink('logo'),\r\n  calendar: generateIconLink('calendar'),\r\n  person: generateIconLink('person'),\r\n  share_gray: generateIconLink('share_gray'),\r\n  plus: generateIconLink('plus'),\r\n  star_outline: generateIconLink('star_outline'),\r\n  emptyProjects: generateIconLink('emptyProjects'),\r\n  send: generateIconLink('Send'),\r\n  sendWhite: generateIconLink('SendWhite'),\r\n  arrow_up: generateIconLink('arrow_up'),\r\n  tooltip_arrow: generateIconLink('tooltip_arrow'),\r\n  delete: generateIconLink('Delete'),\r\n  edit: generateIconLink('Edit'),\r\n  account: generateIconLink('account'),\r\n  company: generateIconLink('company'),\r\n}\r\n\r\nexport type SystemIcons =\r\n  | 'general labor'\r\n  | 'carpentry'\r\n  | 'concrete'\r\n  | 'demo'\r\n  | 'drywall'\r\n  | 'electrical'\r\n  | 'flooring'\r\n  | 'glass'\r\n  | 'hvac'\r\n  | 'ironwork'\r\n  | 'landscaping'\r\n  | 'masonry'\r\n  | 'painting'\r\n  | 'plumbing'\r\n  | 'roofing'\r\n  | 'tile&stone'\r\n  | 'welding'\r\n  | 'active_star'\r\n  | 'arrow_right'\r\n  | 'close'\r\n  | 'pdf'\r\n  | 'save_pdf'\r\n  | 'save_profile'\r\n  | 'select_down'\r\n  | 'select_up'\r\n  | 'share'\r\n  | 'star'\r\n  | 'usa'\r\n  | 'gigs_handshake'\r\n  | 'briefcase'\r\n  | 'refer'\r\n  | 'certificate'\r\n  | 'round_down'\r\n  | 'checkmark'\r\n  | 'logo'\r\n  | 'calendar'\r\n  | 'person'\r\n  | 'share_gray'\r\n  | 'plus'\r\n  | 'star_outline'\r\n  | 'emptyProjects'\r\n  | 'send'\r\n  | 'sendWhite'\r\n  | 'arrow_up'\r\n  | 'tooltip_arrow'\r\n  | 'delete'\r\n  | 'edit'\r\n  | 'account'\r\n  | 'company'\r\n\r\ninterface IconProps {\r\n  icon: SystemIcons\r\n  style?: CSSProperties\r\n  disabled?: boolean\r\n  animated?: boolean\r\n  className?: string\r\n  onClick?(): void\r\n}\r\n\r\nexport default function Icon(props: IconProps) {\r\n  const icon = props.icon.replace(/ /g, '')\r\n  return !!icons[icon] ? (\r\n    <img\r\n      onClick={props.onClick}\r\n      src={'/' + icons[icon]}\r\n      alt={props.icon + 'icon'}\r\n      style={props.style}\r\n      className={props.className}\r\n    />\r\n  ) : (\r\n    <span>No such icon</span>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { CSSProperties } from 'react'\r\nimport styled from 'styled-components'\r\nimport { SYSTEM_COLORS } from '../../../constants/system'\r\nimport { fixClass } from '../../../helpers/base'\r\nimport './style.scss'\r\nimport Icon, { SystemIcons } from '../Icon'\r\n\r\nconst Btn = styled.button<any>`\r\n  // @ts-ignore\r\n  background: ${props => SYSTEM_COLORS[props.background]};\r\n  color: ${props => props.color || 'white'};\r\n  :hover {\r\n    // @ts-ignore\r\n    background: ${props => SYSTEM_COLORS[props.background.replace('Main', 'Hover')]};\r\n  }\r\n`\r\n\r\ntype ButtonBackground =\r\n  | 'MainPrimary'\r\n  | 'MainSecondary'\r\n  | 'MainSuccess'\r\n  | 'MainError'\r\n  | 'MainWarning'\r\n  | 'MainInfo'\r\n  | 'MainLight'\r\n  | 'MainWhite'\r\n\r\ninterface ButtonProps {\r\n  children: any\r\n  onClick?: any\r\n  className?: string\r\n  background?: ButtonBackground\r\n  color?: string\r\n  style?: CSSProperties\r\n  disabled?: boolean\r\n  loading?: boolean\r\n  icon?: SystemIcons\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  return (\r\n    <Btn\r\n      className={`Button-component${fixClass(props.className)}`}\r\n      style={props.style}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled || props.loading}\r\n      background={props.background || 'MainPrimary'}\r\n      color={['MainLight', 'MainWhite'].includes(props.background || '') ? SYSTEM_COLORS.Title : props.color}\r\n    >\r\n      {props.loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {props.icon && <Icon icon={props.icon} style={{ marginRight: 6 }} />} {props.children}\r\n        </>\r\n      )}\r\n    </Btn>\r\n  )\r\n}\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport './style.scss'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { User } from '../../../../interfaces/baseIntefaces'\r\nimport Button from '../../../components/Button'\r\n\r\ninterface PageHeaderProps {\r\n  user?: User\r\n}\r\n\r\nexport default function PageHeader(props: PageHeaderProps) {\r\n  const history = useHistory()\r\n  return (\r\n    <header className=\"PageHeader-module\">\r\n      <nav>\r\n        <div className=\"logo\">\r\n        <img src=\"/assets/icons/logo.svg\" alt=\"logo\" />\r\n        <p>LOGO</p>\r\n        </div>\r\n        <div className=\"profile\">\r\n          {props.user ? (\r\n            <>\r\n              {props.user.first_name + ' ' + props.user.last_name}\r\n            </>\r\n          ) : (\r\n            <Button\r\n              onClick={() => {\r\n                return history.push('/welcome')\r\n              }}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nimport { ScreenProps } from '../../../../interfaces/baseIntefaces'\r\nimport PageHeader from '../../../modules/common/PageHeader'\r\n\r\ninterface MyIsa extends ScreenProps {}\r\n\r\nexport default function MyIsa(props: MyIsa) {\r\n  return (\r\n    <article className=\"MyIsa-page\">\r\n      <PageHeader />\r\n      <section className=\"content\">\r\n        <div className=\"myIsa\">My ISA’s</div>\r\n      </section>\r\n    </article>\r\n  )\r\n}","import React from 'react'\r\nimport { ScreenProps } from '../../../../interfaces/baseIntefaces'\r\n\r\ninterface OnBoardingProps extends  ScreenProps{\r\n\r\n}\r\n\r\n\r\nexport default function OnBoarding(props: OnBoardingProps) {\r\n  return <article><h1>OnBoarding page</h1></article>\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Route, Switch, Redirect } from 'react-router'\r\nimport { User } from './interfaces/baseIntefaces'\r\nimport NotFound from './app/pages/public/404'\r\nimport MyIsa from './app/pages/public/MyISA'\r\nimport OnBoarding from './app/pages/public/OnBoarding'\r\n\r\nexport default function Routes({ currentUser, fetchUser }: any) {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/my-isa\" render={(props: any) => <MyIsa {...props} currentUser={currentUser} fetchUser={fetchUser} />} />\r\n          <Route path=\"/on-boarding\" render={(props: any) => <OnBoarding {...props} currentUser={currentUser} fetchUser={fetchUser} />} />\r\n          {/*404*/}\r\n          <Redirect path=\"/\" to={'/my-isa'} exact />\r\n          <Route path=\"*\" render={(props: any) => <NotFound {...props} />} />\r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nconst privateRoute = (Component: any, user: User | null, route: string, fetchUser: () => void) => {\r\n  return (\r\n    <Route\r\n      path={route}\r\n      render={(props: any) =>\r\n        user ? (\r\n          <Component {...props} currentUser={user} fetchUser={fetchUser} />\r\n        ) : (\r\n          <Redirect to={'/welcome'} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}","import { Dispatch } from 'redux'\r\n\r\nconst SET_AUTH_FIELD = 'SET_AUTH_FIELD'\r\n\r\nexport type AuthKeys =\r\n  | 'first_name'\r\n  | 'last_name'\r\n  | 'email'\r\n  | 'phone_number'\r\n  | 'password'\r\n  | 'company_name'\r\n  | 'company_type'\r\n  | 'title'\r\n  | 'address'\r\n  | 'company_website'\r\n  | 'building_types'\r\n  | 'project_types'\r\n  | 'number_of_hourly_employees_range'\r\n\r\nexport interface AuthState {\r\n  first_name: string\r\n  last_name: string\r\n  email: string\r\n  phone_number: string\r\n  password: string\r\n  company_name: string\r\n  company_type: string\r\n  title: string\r\n  address: string\r\n  company_website: string\r\n  building_types: string\r\n  project_types: string\r\n  number_of_hourly_employees_range: string\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  first_name: '',\r\n  last_name: '',\r\n  email: '',\r\n  phone_number: '',\r\n  password: '',\r\n  company_name: '',\r\n  company_type: '',\r\n  title: '',\r\n  address: '',\r\n  company_website: '',\r\n  building_types: '',\r\n  project_types: '',\r\n  number_of_hourly_employees_range: '0-5',\r\n}\r\n\r\n// actions\r\nexport const setAuthField = (e: string, key: AuthKeys) => ({\r\n  type: SET_AUTH_FIELD,\r\n  val: e,\r\n  key,\r\n})\r\n\r\nexport const authState = (state: any) => ({\r\n  auth: state.auth,\r\n})\r\n\r\nexport const authDispatcher = (dispatch: Dispatch) => ({\r\n  setAuthField: (e: string, key: AuthKeys) => dispatch(setAuthField(e, key)),\r\n})\r\n\r\nexport default function authReducer(state = initialState, action: { key: AuthKeys; val: string; type: string }) {\r\n  if (action.type === SET_AUTH_FIELD) {\r\n    return { ...state, [action.key]: action.val }\r\n  }\r\n\r\n  return state\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport authReducer from './reducers/auth'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n})\r\n\r\nconst store = (initialState = {}) => {\r\n  const middlewares = [reduxThunk]\r\n\r\n  return createStore(rootReducer, initialState, applyMiddleware(...middlewares))\r\n}\r\n\r\nexport default store\r\n","import ENVIRONMENT from './current_environment'\r\n\r\nexport type ENVs = 'staging' | 'production' | 'dev'\r\n\r\nconst ENV = {\r\n  dev: {\r\n    MAIN_API: 'http://localhost:5000/',\r\n  },\r\n  staging: {\r\n    MAIN_API: 'http://staging.com/',\r\n  },\r\n  production: {\r\n    MAIN_API: 'http://production.com/',\r\n  },\r\n}\r\n\r\nconst currentEnv = () => ENV[ENVIRONMENT]\r\n\r\nexport default currentEnv\r\n","const logsEnabled = true\r\n\r\nexport const log = (message?: any, ...optionalParams: any[]) => {\r\n  if (logsEnabled) {\r\n    console.log(message, ...optionalParams)\r\n  }\r\n}\r\n","import BaseService from './base.service'\r\n\r\nconst baseService = new BaseService()\r\n\r\nexport default class UserService {\r\n  public async getCurrentUser() {\r\n    return await baseService.getJSON('user')\r\n  }\r\n\r\n  public async checkAuth() {\r\n    return await baseService.getJSON('check-auth')\r\n  }\r\n\r\n  public async editUser(details: any) {\r\n    return await baseService.patchJSON('user', details)\r\n  }\r\n}\r\n","import currentEnv from '../config/environment'\r\nimport { objectToUrlParams } from '../helpers/base'\r\nimport { log } from './logging.service'\r\n\r\ntype PostAPIs = 'register' | 'login' | 'user'\r\n\r\ntype PatchAPIs = 'register' | 'login' | 'user'\r\n\r\ntype GetAPIs = 'logout' | 'user' | 'check-auth'\r\n\r\nexport default class BaseService {\r\n  public MAIN_API = currentEnv().MAIN_API\r\n\r\n  private handleError = (res: { error: { any: string[] } | string }) => {\r\n    if (typeof res.error === 'string') return res\r\n    const values = Object.values(res.error)\r\n    const keys = Object.keys(res.error)\r\n    const err = {\r\n      error: keys\r\n        .map((key, i) => {\r\n          const message = Array.isArray(values[i]) ? values[i].join(', ') : Object.values(values[i]).join(', ')\r\n          return key + ': ' + message\r\n        })\r\n        .join('\\n'),\r\n    }\r\n    log('Error in handleError method in BaseService', err)\r\n    return err\r\n  }\r\n\r\n  // check if type of response is JSON\r\n  private handleResponseType = async (res: Response) => {\r\n    const contentType = res.headers.get('content-type')\r\n    if (contentType && contentType.indexOf('application/json') !== -1) {\r\n      return await res.json()\r\n    } else {\r\n      log('Received type is not JSON but *: ', await res.text())\r\n      return null\r\n    }\r\n  }\r\n\r\n  // define request headers\r\n  private headers = () => {\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Headers': '*',\r\n    }\r\n  }\r\n\r\n  getJSON = async (url: GetAPIs, params?: object) => {\r\n    const res = await fetch(this.MAIN_API + url + `${objectToUrlParams(params)}`, {\r\n      method: 'GET',\r\n      headers: this.headers(),\r\n      credentials: 'include',\r\n    })\r\n    const response = await this.handleResponseType(res)\r\n    if (response && response.error) {\r\n      return this.handleError(response)\r\n    }\r\n    return response\r\n  }\r\n\r\n  postJSON = async (url: PostAPIs, data: any, saveCookie?: boolean) => {\r\n    try {\r\n      const res = await fetch(this.MAIN_API + url, {\r\n        method: 'POST',\r\n        headers: this.headers(),\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      })\r\n\r\n      if (saveCookie) {\r\n        log(res)\r\n      }\r\n\r\n      const response = await this.handleResponseType(res)\r\n      if (response && response.error) {\r\n        return this.handleError(response)\r\n      }\r\n      return response\r\n    } catch (e) {\r\n      log('Error doing postJSON in base.service.ts: ', e)\r\n      throw e\r\n    }\r\n  }\r\n\r\n  patchJSON = async (url: PatchAPIs, data: any) => {\r\n    try {\r\n      const res = await fetch(this.MAIN_API + url, {\r\n        method: 'PATCH',\r\n        headers: this.headers(),\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      })\r\n      const response = await this.handleResponseType(res)\r\n      if (response && response.error && typeof response.error === 'object') {\r\n        return this.handleError(response)\r\n      }\r\n      return response\r\n    } catch (e) {\r\n      log('Error doing patchJSON in base.service.ts: ', e)\r\n      throw e\r\n    }\r\n  }\r\n\r\n  deleteJSON = async (url: string, data: any) => {\r\n    try {\r\n      const res = await fetch(this.MAIN_API + url, {\r\n        method: 'DELETE',\r\n        headers: this.headers(),\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      })\r\n      const response = await this.handleResponseType(res)\r\n      if (response && response.error && typeof response.error === 'object') {\r\n        return this.handleError(response)\r\n      }\r\n      return response\r\n    } catch (e) {\r\n      log('Error doing patchJSON in base.service.ts: ', e)\r\n      throw e\r\n    }\r\n  }\r\n\r\n  postFormData = async (url: string, data: FormData, method?: 'post' | 'patch') => {\r\n    try {\r\n      const res = await fetch(this.MAIN_API + url, {\r\n        method: method || 'post',\r\n        credentials: 'include',\r\n        body: data,\r\n      })\r\n      const response = await this.handleResponseType(res)\r\n      if (response && response.error) {\r\n        return this.handleError(response)\r\n      }\r\n      return response\r\n    } catch (e) {\r\n      log('Error doing postFormData in base.service.ts: ', e)\r\n      throw e\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Icon from './Icon'\r\n\r\ninterface LoaderProps {}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  img {\r\n    width: 70px;\r\n    position: relative;\r\n    top: -55px;\r\n  }\r\n  svg {\r\n    -webkit-transform-origin: 50% 65%;\r\n    transform-origin: 50% 65%;\r\n  }\r\n\r\n  svg polygon {\r\n    stroke-dasharray: 17;\r\n    -webkit-animation: dash 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\r\n    animation: dash 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\r\n  }\r\n\r\n  @-webkit-keyframes dash {\r\n    to {\r\n      stroke-dashoffset: 136;\r\n    }\r\n  }\r\n\r\n  @keyframes dash {\r\n    to {\r\n      stroke-dashoffset: 136;\r\n    }\r\n  }\r\n  @-webkit-keyframes rotate {\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes rotate {\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Loader(props: LoaderProps) {\r\n  return (\r\n    <Wrapper>\r\n      <svg id=\"triangle\" width=\"150px\" height=\"150px\" viewBox=\"-3 -4 39 39\">\r\n        <polygon fill=\"#FFFFFF\" stroke=\"#333333\" strokeWidth=\"1\" points=\"16,0 32,32 0,32\" />\r\n      </svg>\r\n      <Icon icon=\"logo\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useLayoutEffect, useState } from 'react'\r\nimport Routes from './Routes'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport UserService from './services/user.service'\r\nimport Loader from './app/components/Loader'\r\nimport { log } from './services/logging.service'\r\n\r\nconst configStore: any = store()\r\nconst userService = new UserService()\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState<any>(null)\r\n  const fetchUser = async () => {\r\n    try {\r\n      const res = await userService.checkAuth()\r\n      if (res) {\r\n        const user = await userService.getCurrentUser()\r\n        return setUser(user)\r\n      } else {\r\n        return setUser(undefined)\r\n      }\r\n    } catch (e) {\r\n      log('Error getting current user: ', e)\r\n      setUser(undefined)\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    fetchUser()\r\n  }, [])\r\n\r\n  return user !== null ? (\r\n    <Provider store={configStore}>\r\n      <Routes currentUser={user} fetchUser={fetchUser} />\r\n    </Provider>\r\n  ) : (\r\n    <Loader />\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n)\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import './styles/global.scss'\r\nimport App from './App'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}